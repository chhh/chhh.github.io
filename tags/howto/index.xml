<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>howto | Dmitry Avtonomov</title>
    <link>https://dmtavt.com/tags/howto/</link>
      <atom:link href="https://dmtavt.com/tags/howto/index.xml" rel="self" type="application/rss+xml" />
    <description>howto</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2016-present Dmitry Avtonomov</copyright><lastBuildDate>Tue, 12 May 2020 12:30:18 -0800</lastBuildDate>
    <image>
      <url>https://dmtavt.com/images/icon_hua06b220db3e60330d8fb3c0279ba5942_14310_512x512_fill_gaussian_center_2.png</url>
      <title>howto</title>
      <link>https://dmtavt.com/tags/howto/</link>
    </image>
    
    <item>
      <title>Installing ExpressVPN client on Manjaro Linux</title>
      <link>https://dmtavt.com/post/2020-05-13-expressvpn-on-manjaro/</link>
      <pubDate>Tue, 12 May 2020 12:30:18 -0800</pubDate>
      <guid>https://dmtavt.com/post/2020-05-13-expressvpn-on-manjaro/</guid>
      <description>&lt;h2 id=&#34;solution-origin---awesome-manjaro-forums&#34;&gt;Solution origin - awesome Manjaro forums&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://forum.manjaro.org/t/installing-expressvpn-on-manjaro-how-to/125345/9&#34;&gt;https://forum.manjaro.org/t/installing-expressvpn-on-manjaro-how-to/125345/9&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;h3 id=&#34;remove-old-install-optional&#34;&gt;Remove old install (optional)&lt;/h3&gt;
&lt;p&gt;Stop and remove old install of expressvpn, if present:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;expressvpn disconnect
sudo systemctl stop expressvpn
sudo systemctl disable expressvpn
sudo pacman -Rns expressvpn

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;install-new-package-from-expressvpn-website&#34;&gt;Install new package from ExpressVPN website&lt;/h3&gt;
&lt;p&gt;ExpressVPN website provides a package for Arch now. Manjaro is based on Arch, so that&#39;s what we need.&lt;br&gt;
Download 64 bit &lt;code&gt;.pkg.tar.xz&lt;/code&gt; Arch package: &lt;a href=&#34;https://www.expressvpn.com/setup#linux&#34;&gt;https://www.expressvpn.com/setup#linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;if you have a fresh install of manjaro:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;go to expressvpn and download the Arch 64 bit version and copy the activation code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;install it via pacman&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -U /path/to/expressvpn.package.tar.xz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;copy the service scripts to the correct location&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo cp /usr/lib/expressvpn/expressvpn*.service /etc/systemd/system/.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;enable and start the service&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable expressvpn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start expressvpn&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;activate it with the activation code you copied earlier&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;expressvpn activate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connect vpn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;expressvpn connect smart&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you connect, expressvpn gives you some valuable infor you might miss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To check your connection status, type &lt;code&gt;expressvpn status&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If your VPN connection unexpectedly drops, internet traffic will be blocked to protect your privacy.&lt;/li&gt;
&lt;li&gt;To disable Network Lock, disconnect ExpressVPN then type &amp;lsquo;expressvpn preferences set network_lock off&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Fixing VMWare Workstation `Device/Credential Guard are not compatible` and `64-bit Guest OS can&#39;t run on 32-bit host` errors</title>
      <link>https://dmtavt.com/post/2020-05-13-vmware-player-fix/</link>
      <pubDate>Tue, 12 May 2020 12:00:18 -0800</pubDate>
      <guid>https://dmtavt.com/post/2020-05-13-vmware-player-fix/</guid>
      <description>&lt;h2 id=&#34;symptoms&#34;&gt;Symptoms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VMWare Wrokstation Player shows a warning when you try to create a new 64-bit VM on a 64-bit host (Win10 Pro host in my case)&lt;/li&gt;
&lt;li&gt;VMWare Wrokstation Player just starts the vm, shows black screen and then an error message pops up, saying: 
&lt;code&gt;VMWare Workstation and Device/Credential Guard are not compatible.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disable &lt;code&gt;Hyper-V&lt;/code&gt; and &lt;code&gt;Windows Sandbox&lt;/code&gt; in &lt;em&gt;Windows Features&lt;/em&gt; (&lt;em&gt;Control Panel -&amp;gt; Programs -&amp;gt; Turn Windows Features On or Off&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Enable processor virtualization in BIOS&lt;/li&gt;
&lt;li&gt;From elevated CMD (run as administrator):
&lt;pre&gt;&lt;code&gt;bcdedit /set hypervisorlaunchtype off
shutdown /r /t 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;some-details-of-what-might-be-wrong&#34;&gt;Some details of what might be wrong&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make sure vitualization is turned on for the processor in BIOS (this step varies by BIOS manufacturer)&lt;/li&gt;
&lt;li&gt;In Windows&amp;rsquo; features check that &lt;code&gt;Hyper-V&lt;/code&gt; and &lt;code&gt;Windows Sandbox&lt;/code&gt; are not enabled.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;my-experience&#34;&gt;My experience&lt;/h2&gt;
&lt;p&gt;I had &lt;code&gt;Windows Sandbox&lt;/code&gt; enabled in the first place. This was causing VMWare Workstation 15.5.2 to show the warning about 64-bit guest
on 32-bit host. Even though the host was 64-bit in fact. I then uninstalled &lt;code&gt;Windows Sandbox&lt;/code&gt; via &lt;code&gt;Add/Remove Windows Features&lt;/code&gt; menu.
Then I started getting the more common &lt;em&gt;Device/Credential Guard are not compatible&lt;/em&gt; error message.&lt;br&gt;
Running from elevated CMD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    bcdedit /set hypervisorlaunchtype off
    shutdown /r /t 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Did the final trick.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zipping all relevant files in a git repo</title>
      <link>https://dmtavt.com/post/2020-01-26-zipping-git-repo/</link>
      <pubDate>Sun, 26 Jan 2020 18:34:18 -0800</pubDate>
      <guid>https://dmtavt.com/post/2020-01-26-zipping-git-repo/</guid>
      <description>&lt;p&gt;This will skip all the unnecessary stuff, like &lt;code&gt;.git&lt;/code&gt; directory,
and files ignored in the git repo itself:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git archive --format=zip -o archive-name.zip HEAD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can omit &lt;code&gt;--format.zip&lt;/code&gt; when you specify output files via &lt;code&gt;-o&lt;/code&gt;,
the format will be inferred.&lt;br&gt;
Add &lt;code&gt;--prefix  subdir-name&lt;/code&gt; to have all files in the archive be put into a folder inside the archive, e.g:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git archive --prefix subdir-name/ -o archive-name.zip HEAD&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding all existing submodules to a git repo</title>
      <link>https://dmtavt.com/post/2018-11-25-adding-all-git-submodules/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 -0800</pubDate>
      <guid>https://dmtavt.com/post/2018-11-25-adding-all-git-submodules/</guid>
      <description>&lt;p&gt;You have a git repo (a directory) which contains sub-directories which are git
repos themselves and now you want them to become submodules. Here&#39;s a quick
automatic way to add them all.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;-maxdepth&lt;/code&gt; if you want to recursively dig deeper than 1 level.&lt;/li&gt;
&lt;li&gt;Assumes that each submodule has a remote named &lt;code&gt;origin&lt;/code&gt;, uses that remote&#39;s
url.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;preview-command&#34;&gt;Preview command&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do if [ -d &amp;quot;${x}/.git&amp;quot; ] ; then cd &amp;quot;${x}&amp;quot; ; origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ; cd - 1&amp;gt;/dev/null; echo git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ; fi ; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will &lt;strong&gt;only print&lt;/strong&gt; the submodule commands to be executed, but NOT execute them.&lt;/p&gt;
&lt;h3 id=&#34;actual-command&#34;&gt;Actual command&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do if [ -d &amp;quot;${x}/.git&amp;quot; ] ; then cd &amp;quot;${x}&amp;quot; ; origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ; cd - 1&amp;gt;/dev/null; git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ; fi ; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will &lt;strong&gt;execute&lt;/strong&gt; the actual submodule commands.&lt;/p&gt;
&lt;h2 id=&#34;readable-versions&#34;&gt;Readable versions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Preview&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do 
  if [ -d &amp;quot;${x}/.git&amp;quot; ] ;
    then cd &amp;quot;${x}&amp;quot; ;
    origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ;
    cd - 1&amp;gt;/dev/null;
    echo git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ;
  fi ;
done
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Execute&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do 
  if [ -d &amp;quot;${x}/.git&amp;quot; ] ; 
    then cd &amp;quot;${x}&amp;quot; ; 
    origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ; 
    cd - 1&amp;gt;/dev/null; 
    git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ; 
  fi ; 
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Credit (modified from an answer here)&lt;/em&gt;:&lt;br&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/10606101/automatically-add-all-submodules-to-a-repo&#34;&gt;https://stackoverflow.com/questions/10606101/automatically-add-all-submodules-to-a-repo&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
