<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dmitry Avtonomov on Dmitry Avtonomov</title>
    <link>https://chhh.github.io/</link>
    <description>Recent content in Dmitry Avtonomov on Dmitry Avtonomov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-present Dmitry Avtonomov</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0700</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Search asd</title>
      <link>https://chhh.github.io/search/search/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 -0700</pubDate>
      
      <guid>https://chhh.github.io/search/search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>So hood 02, he he</title>
      <link>https://chhh.github.io/design/so-hood-02/</link>
      <pubDate>Sat, 08 Sep 2018 16:36:17 -0700</pubDate>
      
      <guid>https://chhh.github.io/design/so-hood-02/</guid>
      <description>&lt;p&gt;So hood-02 is also here!&lt;/p&gt;

&lt;p&gt;And the image: &lt;img src=&#34;dbh/so-hood-02.png&#34; alt=&#34;so hoood&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>So hood 01, ho ho</title>
      <link>https://chhh.github.io/design/so-hood-01/</link>
      <pubDate>Sat, 08 Sep 2018 16:35:17 -0700</pubDate>
      
      <guid>https://chhh.github.io/design/so-hood-01/</guid>
      <description>&lt;p&gt;So hood-01 is here!&lt;/p&gt;

&lt;p&gt;And the image: &lt;img src=&#34;dbh/so-hood-01.png&#34; alt=&#34;so hoood&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use p4merge from Perforce as default git mergetool</title>
      <link>https://chhh.github.io/post/2018-09-07-p4merge-as-git-merge-tool/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 -0700</pubDate>
      
      <guid>https://chhh.github.io/post/2018-09-07-p4merge-as-git-merge-tool/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;p4merge-conflict-resolution.png&#34; alt=&#34;p4merge-conflict-resolution-screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A while ago this took more effort as described &lt;a href=&#34;https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration&#34; target=&#34;_blank&#34;&gt;in this
link&lt;/a&gt; (scroll
to section  &amp;lsquo;External Merge and Diff Tools&amp;rsquo;).&lt;/p&gt;

&lt;p&gt;Not anymore. Now git natively supports p4merge. So you only need to modify your
global git config (&lt;code&gt;~/.gitconfig&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[merge]
    tool = p4merge
[mergetool &amp;quot;p4merge&amp;quot;]
    path = p4merge.exe
[diff]
    tool = p4merge
[difftool &amp;quot;p4merge&amp;quot;]
    path = p4merge.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can provide the absolute path to the p4merge binary, but I have it on PATH
because I installed it with &lt;a href=&#34;https://scoop.sh/&#34; target=&#34;_blank&#34;&gt;scoop&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;install-p4merge-with-scoop&#34;&gt;Install p4merge with scoop&lt;/h2&gt;

&lt;p&gt;To get scoop, from the PowerShell execute:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy RemoteSigned -scope CurrentUser
iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;p4merge&lt;/em&gt; is in the &lt;a href=&#34;https://github.com/lukesampson/scoop-extras&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;extras&lt;/strong&gt;
scoop bucket&lt;/a&gt;, add the bucket first
to be able to install it easily:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop bucket add extras
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;then you can install p4merge&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop update
scoop search p4merge
scoop install p4merge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To list all you installed scoop apps with PowerShell:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;(scoop list) | sls &#39;^  (\w+)&#39; |% { $_.matches.groups[1].value }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;full-gitconfig&#34;&gt;Full .gitconfig&lt;/h2&gt;

&lt;p&gt;My full &lt;code&gt;.gitconfig&lt;/code&gt; is below. It &lt;code&gt;[include]&lt;/code&gt;s two paths &lt;code&gt;.gitaliases&lt;/code&gt; and
&lt;code&gt;.gitmorealiases&lt;/code&gt;, they are both just text files in my home directory, i.e.
they are siblings of my global &lt;code&gt;.gitconfig&lt;/code&gt; file. They contain, you guessed
it, &lt;strong&gt;git aliases&lt;/strong&gt;.
A large collection of aliases is &lt;a href=&#34;https://github.com/GitAlias/gitalias&#34; target=&#34;_blank&#34;&gt;available
here&lt;/a&gt;. And &lt;a href=&#34;https://haacked.com/archive/2014/07/28/github-flow-aliases/&#34; target=&#34;_blank&#34;&gt;here is a very useful blog
post / tutorial&lt;/a&gt;
introducing you to the usefulness of aliases.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/chhh/c226cd37725ee6deb7a0.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Bring back &#34;Open command window here&#34; context menu item in Windows</title>
      <link>https://chhh.github.io/post/2018-06-27-command-prompt-here/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 -0700</pubDate>
      
      <guid>https://chhh.github.io/post/2018-06-27-command-prompt-here/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s a simple registry hack.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Strat registry editor: &lt;em&gt;Run&lt;/em&gt; -&amp;gt; &lt;code&gt;regedit&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;HKEY_CLASSES_ROOT\Directory\shell\cmd&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Right-click the &lt;em&gt;cmd&lt;/em&gt; (folder) key, and click &lt;em&gt;Permissions&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;Advanced&lt;/em&gt; button.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Advanced Security Settings&lt;/em&gt; dialog will open, at the top next to &lt;em&gt;Owner&lt;/em&gt; click &lt;em&gt;Change&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Put in your account name, click &lt;em&gt;Check Names&lt;/em&gt; to make sure domain etc is set up correctly, click &lt;em&gt;OK&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Check the &lt;em&gt;Replace owner on subcontainers and objects&lt;/em&gt; check box near &lt;em&gt;Owner&lt;/em&gt; field.&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Apply&lt;/em&gt;, &lt;em&gt;OK&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In the now open &lt;em&gt;Premissions&lt;/em&gt; dialog, select &lt;strong&gt;Administrators&lt;/strong&gt;, check &lt;strong&gt;Full Control&lt;/strong&gt; checkbox below.&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Apply&lt;/em&gt;, &lt;em&gt;OK&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;You are now back in the registry editor. Click the &lt;code&gt;cmd&lt;/code&gt; folder on the left.&lt;/li&gt;
&lt;li&gt;Look for &lt;code&gt;HideBasedOnVelocityId&lt;/code&gt; key in the right window tab.

&lt;ul&gt;
&lt;li&gt;If it&amp;rsquo;s there, Right-click, &lt;em&gt;Rename&lt;/em&gt; to &lt;code&gt;ShowBasedOnVelocityId&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If it&amp;rsquo;s not there, just add the &lt;code&gt;ShowBasedOnVelocityId&lt;/code&gt; key (type &lt;em&gt;DWORD&lt;/em&gt;), value &lt;code&gt;0x00639bc8 (6527944)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Now try &lt;em&gt;Shift + Right Click&lt;/em&gt; in an Explorer window, you should see the &lt;em&gt;Open command window here&lt;/em&gt; option.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Set up custom domain name with GitHub pages</title>
      <link>https://chhh.github.io/post/2018-05-07-custom-domain-name-with-github-pages/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 -0700</pubDate>
      
      <guid>https://chhh.github.io/post/2018-05-07-custom-domain-name-with-github-pages/</guid>
      <description>

&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;

&lt;p&gt;The whole process for various situations is described in &lt;a href=&#34;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&#34; target=&#34;_blank&#34;&gt;GitHub
documentation&lt;/a&gt;.
This is just a reminder for myself how to properly configure top-level apex domain
redirect with GitHub Pages.&lt;/p&gt;

&lt;p&gt;All of your &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; or &lt;code&gt;&amp;lt;orgname&amp;gt;.github.io&lt;/code&gt; pages will be
redirected to the new custom domain, so your project pages can benefit from this
automatically. If you already have a project page like
&lt;code&gt;&amp;lt;username&amp;gt;.github.io/projectname&lt;/code&gt;, this will become &lt;code&gt;&amp;lt;custom.domain&amp;gt;/projectname&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;sequence-of-actions&#34;&gt;Sequence of actions&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s say you own &lt;code&gt;domain.com&lt;/code&gt; for the sake of example, and your github username
is &lt;code&gt;yourname&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;on-github&#34;&gt;On GitHub&lt;/h3&gt;

&lt;p&gt;Create a repository with name &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; or
&lt;code&gt;&amp;lt;orgname&amp;gt;.github.io&lt;/code&gt; depending on the repo type.&lt;/p&gt;

&lt;p&gt;Create a repo &lt;code&gt;yourname.github.io&lt;/code&gt; add a file called &lt;code&gt;CNAME&lt;/code&gt; with the following
contents to the root directory:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;domain.com
www.domain.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you prefer the name with &lt;em&gt;www&lt;/em&gt; prefix, put it at the top. Commit and push.
That&amp;rsquo;s it with github.&lt;/p&gt;

&lt;h3 id=&#34;at-dns-provider-config&#34;&gt;At DNS provider config&lt;/h3&gt;

&lt;p&gt;Add an A record:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: @
type: A
TTL : 1h
data: [185.199.108.153, 185.199.109.153, 185.199.110.153, 185.199.111.153]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a CNAME record:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: www
type: CNAME
TTL : 1h
data: yourname.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With &lt;em&gt;domains.google.com&lt;/em&gt; this looks like the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;chhh-github-io-dns-config.png&#34; alt=&#34;domains-google-com-config-screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It might take several hours for the information to propagate throughout
the net and become accessible everywhere.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using multiple different shells/subsystems on Windows</title>
      <link>https://chhh.github.io/post/2018-03-07-shells-on-windows/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 -0800</pubDate>
      
      <guid>https://chhh.github.io/post/2018-03-07-shells-on-windows/</guid>
      <description>

&lt;p&gt;Shells to be used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cmd.exe&lt;/li&gt;
&lt;li&gt;MINGW from &lt;a href=&#34;https://git-scm.com/download/win&#34; target=&#34;_blank&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cygwin.com/install.html&#34; target=&#34;_blank&#34;&gt;Cygwin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optionally &lt;a href=&#34;http://www.msys2.org/&#34; target=&#34;_blank&#34;&gt;MSYS2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of the above are managed through one shell manager -
&lt;a href=&#34;https://conemu.github.io/&#34; target=&#34;_blank&#34;&gt;ConEmu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First install all the shells, then ConEmu.&lt;/p&gt;

&lt;h2 id=&#34;easy-installation-of-useful-dev-tools&#34;&gt;Easy installation of useful dev tools&lt;/h2&gt;

&lt;p&gt;Use &lt;a href=&#34;http://scoop.sh/&#34; target=&#34;_blank&#34;&gt;scoop&lt;/a&gt; to install basic utilities and languages.
Install from powershell (without admin rights):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy RemoteSigned -scope CurrentUser
iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using command &lt;code&gt;scoop export&lt;/code&gt; you can get an importable list of all installed packages.
Here&amp;rsquo;s mine currently: &lt;a href=&#34;scoop-export.txt&#34; target=&#34;_blank&#34;&gt;scoop-export.txt&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;tweaks-to-shells&#34;&gt;Tweaks to shells&lt;/h2&gt;

&lt;h3 id=&#34;cmd-exe&#34;&gt;cmd.exe&lt;/h3&gt;

&lt;p&gt;To get auto-completion support similar to what you get in &lt;em&gt;bash&lt;/em&gt;, install
&lt;a href=&#34;https://mridgers.github.io/clink/&#34; target=&#34;_blank&#34;&gt;clink&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;conemu&#34;&gt;ConEmu&lt;/h3&gt;

&lt;p&gt;&lt;kbd&gt;Win + Alt + P&lt;/kbd&gt; to open Properties. &lt;code&gt;Startup -&amp;gt; Tasks&lt;/code&gt; and set shortcuts for
shells you&amp;rsquo;ll be using.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + C&lt;/code&gt; for &lt;em&gt;cmd.exe&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + Shift + C&lt;/code&gt; for elevated &lt;em&gt;cmd.exe&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + W&lt;/code&gt; for &lt;em&gt;MINGW&lt;/em&gt; from &lt;em&gt;git&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + Y&lt;/code&gt; for &lt;em&gt;Cygwin&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The full config is &lt;a href=&#34;ConEmu_chhh-2018-03-07.xml&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, can be imported at installation time.&lt;/p&gt;

&lt;h3 id=&#34;cygwin&#34;&gt;Cygwin&lt;/h3&gt;

&lt;p&gt;Basic packages to install throught &lt;em&gt;setup.exe&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;wget&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;lynx&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is little known package manager that can be used from inside cygwin without having
to run &lt;em&gt;setup.exe&lt;/em&gt; all the time: &lt;a href=&#34;https://github.com/transcode-open/apt-cyg&#34; target=&#34;_blank&#34;&gt;apt-cyg&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Installation&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lynx -source rawgit.com/transcode-open/apt-cyg/master/apt-cyg &amp;gt; apt-cyg
install apt-cyg /bin
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Solving problems with tethering wifi from an Android phone</title>
      <link>https://chhh.github.io/post/2018-02-19-tethering-wifi-from-android-dns-problems/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 -0800</pubDate>
      
      <guid>https://chhh.github.io/post/2018-02-19-tethering-wifi-from-android-dns-problems/</guid>
      <description>&lt;p&gt;Once I tried to connect from Win10 to a hotspot running off Google Pixel 2
(Android 8.1.0)  connected to T-Mobile (tethering) and it worked for a while,
but one day it just broke. Connection would work for 5-10 seconds allowing
to load one website maybe, but then it threw some DNS errors. Setting DNS
server manually didn&amp;rsquo;t help, also &lt;code&gt;ping 8.8.8.8&lt;/code&gt; timed out.&lt;/p&gt;

&lt;p&gt;The solution (&lt;strong&gt;from elevated cmd prompt&lt;/strong&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;netsh int ip reset c:\resetlog.txt
netsh winsock reset catalog
ipconfig /flushdns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And restart the computer.&lt;/p&gt;

&lt;p&gt;Taken from &lt;a href=&#34;https://answers.microsoft.com/en-us/windows/forum/windows8_1-networking/dns-server-isnt-responding-no-wifi-internet/c6bb4b4c-6d8b-4f9d-8ca4-d03e6c414363?auth=1&#34; target=&#34;_blank&#34;&gt;this question @ answers.microsoft.com&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IMTBX and Grppr: Software for Top-Down Proteomics Utilizing Ion Mobility-Mass Spectrometry</title>
      <link>https://chhh.github.io/publication/imtbx/</link>
      <pubDate>Wed, 27 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://chhh.github.io/publication/imtbx/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Intellij IDEA live templates</title>
      <link>https://chhh.github.io/post/2017-01-26-intellij-idea-live-templates-slf4j/</link>
      <pubDate>Thu, 26 Jan 2017 00:00:00 -0800</pubDate>
      
      <guid>https://chhh.github.io/post/2017-01-26-intellij-idea-live-templates-slf4j/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/idea/features/&#34; target=&#34;_blank&#34;&gt;Intellij IDEA&lt;/a&gt; IDE has a nice feature
of live templates. You type several symbols, press tab (by default) and it
expands the symbols into full expressions. E.g. you can type &lt;code&gt;fori&lt;/code&gt;, press
&lt;kbd&gt;Tab&lt;/kbd&gt; and get a full &lt;em&gt;for&lt;/em&gt; loop created for you, or type &lt;code&gt;iter&lt;/code&gt;, press
&lt;kbd&gt;Tab&lt;/kbd&gt; and if you have &lt;code&gt;iterable&lt;/code&gt;s in scope, you&amp;rsquo;ll be presented with a
choice of available ones to iterate over.&lt;/p&gt;

&lt;h2 id=&#34;example-slf4j-logger-in-each-class&#34;&gt;Example: slf4j logger in each class&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s a super common thing to type at the beginning of each class:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(MyClassName.class);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pretty tedious even with IDE&amp;rsquo;s help.&lt;/p&gt;

&lt;p&gt;Live templates to the rescue, you can define your own one to create the whole
line for you! You&lt;/p&gt;

&lt;h2 id=&#34;how-to-define-a-live-template&#34;&gt;How to define a live template&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go to &lt;em&gt;File&lt;/em&gt;-&amp;gt;&lt;em&gt;Settings&lt;/em&gt;-&amp;gt;&lt;em&gt;Editor&lt;/em&gt;-&amp;gt;&lt;em&gt;Live Templates&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In the right panel tree select category &lt;em&gt;other&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;plus&lt;/em&gt; (+) sign on the top right, select &lt;em&gt;Live Template&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Set

&lt;ul&gt;
&lt;li&gt;Abbreviation: &lt;code&gt;log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Description: &lt;code&gt;Inserts private static Logger for slf4j&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Template text: &lt;code&gt;private static final org.slf4j.Logger logger =
org.slf4j.LoggerFactory.getLogger($CLASS_NAME$.class);$END$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Now click the &lt;em&gt;Edit Variables&lt;/em&gt; button, we will tell the IDE what
&lt;code&gt;$CLASS_NAME$&lt;/code&gt; means here. &lt;code&gt;$END$&lt;/code&gt; means where to place the cursor after
template expansion.

&lt;ul&gt;
&lt;li&gt;Name: &lt;code&gt;CLASS_NAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expression: &lt;code&gt;className()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Default value: leave empty&lt;/li&gt;
&lt;li&gt;Skip if defined: true (check the checkbox)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;At the very bottom look for text &lt;em&gt;Applicable in&lt;/em&gt; with a link &lt;em&gt;Change&lt;/em&gt; next to
it, click it. Select &lt;em&gt;Java&lt;/em&gt;-&amp;gt;&lt;em&gt;declaration&lt;/em&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congratulations, you&amp;rsquo;re done! Just type &lt;code&gt;log&lt;/code&gt; and press &lt;kbd&gt;Tab&lt;/kbd&gt; anywhere
in the class declaration.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Publishing java libraries to Maven Central, the manual</title>
      <link>https://chhh.github.io/post/2017-01-25-publishing-to-maven-central/</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 -0800</pubDate>
      
      <guid>https://chhh.github.io/post/2017-01-25-publishing-to-maven-central/</guid>
      <description>

&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what-is-sonatype-and-why-is-it-needed&#34;&gt;What is Sonatype and why is it needed?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gpg-signing&#34;&gt;GPG signing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#windows-caveat&#34;&gt;Windows caveat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#configuring-maven-to-know-where-to-get-the-signing-key&#34;&gt;Configuring Maven to know where to get the signing key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#configuring-maven-to-know-the-credentials-for-sonatype-servers&#34;&gt;Configuring Maven to know the credentials for Sonatype servers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#satisfying-requirements-to-pass-all-checks-upon-submission-to-sonatype&#34;&gt;Satisfying requirements to pass all checks upon submission to Sonatype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#publishing-parent-pom-project-to-central&#34;&gt;Publishing parent POM project to Central&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#publishing-the-project-to-central&#34;&gt;Publishing the project to Central&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;


&lt;h2 id=&#34;what-is-sonatype-and-why-is-it-needed&#34;&gt;What is Sonatype and why is it needed?&lt;/h2&gt;

&lt;p&gt;Sonatypeis a company that  provides a staging repository, which performs
validation and allows to push the builds that pass all checks to the Central
repo. Without it, basically, you can&amp;rsquo;t easily publish anything to the Central
easily, unless you&amp;rsquo;re an Apache project or similar.&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;Follow their getting started
&lt;a href=&#34;http://central.sonatype.org/pages/ossrh-guide.html&#34; target=&#34;_blank&#34;&gt;guide&lt;/a&gt; to set up the needed
credentials. This should be easy - you create a JIRA account and you create a
ticket in JIRA to claim your namespace (groupId in Maven terms). If you have a
github account, for example,
&lt;strong&gt;&lt;a href=&#34;http://github.com/chhh&#34; target=&#34;_blank&#34;&gt;http://github.com/chhh&lt;/a&gt;&lt;/strong&gt;, you&amp;rsquo;ll want to claim
&lt;strong&gt;com.github.chhh&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;gpg-signing&#34;&gt;GPG signing&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ll need to set up and publish your GPG key for signing artifacts. This is
described
&lt;a href=&#34;http://central.sonatype.org/pages/working-with-pgp-signatures.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In short you&amp;rsquo;ll need to install gpg or gpg2. I did it on Windows and already had
a working gpg that came with git installation. So I happily used that to
generate my key with (create it with a passphrase!):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gpg --gen-key&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make sure to check&lt;/strong&gt; that the generated key does not have sub keys for
signing. First issue &lt;code&gt;gpg --list-keys&lt;/code&gt;, the output should be like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ gpg --list-keys
/c/Users/&amp;lt;username&amp;gt;/.gnupg/pubring.gpg
---------------------------------
pub   2048R/DA123C12 2012-01-24
uid                  Dmitry Avtonomov (chhh) &amp;lt;email@gmail.com&amp;gt;
sub   2048R/3E123123 2012-01-24
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice, that there is one &lt;em&gt;pub&lt;/em&gt; key and one &lt;em&gt;sub&lt;/em&gt; key. You want this &lt;em&gt;sub&lt;/em&gt; key
to not be &lt;em&gt;Usage: C&lt;/em&gt; type.
&lt;code&gt;gpg --edit-key DA123C12&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;gpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

pub  2048R/DA100C23  created: 2012-01-24  expires: never       usage: SC
                     trust: ultimate      validity: ultimate
sub  2048R/3E123123  created: 2012-01-24  expires: never       usage: E
[ultimate] (1). Dmitry Avtonomov (chhh) &amp;lt;email@gmail.com&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this case the &lt;em&gt;sub&lt;/em&gt; key is &lt;em&gt;usage: E&lt;/em&gt;, it&amp;rsquo;s used for encryption only, so
we&amp;rsquo;re good to go, otherwise you&amp;rsquo;d need to delete or revoke it. Published the key
with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gpg --keyserver hkp://pool.sks-keyservers.net --send-keys &amp;lt;key-id&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;windows-caveat&#34;&gt;Windows caveat&lt;/h3&gt;

&lt;p&gt;The previous steps created the keychain file in &lt;code&gt;c:/Users/&amp;lt;username&amp;gt;/.gnupg&lt;/code&gt;.
However, when I later installed the native windows gpg from
&lt;a href=&#34;https://www.gnupg.org/download/&#34; target=&#34;_blank&#34;&gt;https://www.gnupg.org/download/&lt;/a&gt; I&amp;rsquo;ve found
that it used a different default path and I could not list the key anymore.
Addind a new environment variable &lt;code&gt;GNUPGHOME&lt;/code&gt; and set it to
&lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\.gnupg&lt;/code&gt;. Now the gpg that was installed in windows could
read the old keychain, which meant maven could now use that key to sign files.&lt;/p&gt;

&lt;h2 id=&#34;configuring-maven-to-know-where-to-get-the-signing-key&#34;&gt;Configuring Maven to know where to get the signing key&lt;/h2&gt;

&lt;p&gt;Check out your &lt;code&gt;&amp;lt;maven-install-apth&amp;gt;/conf&lt;/code&gt; directory. There should be a
&lt;code&gt;settings.xml&lt;/code&gt; file. Copy that over to your &lt;code&gt;&amp;lt;user-home&amp;gt;/.m2&lt;/code&gt;, unless you
already have it there. Add the following to &lt;code&gt;&amp;lt;profiles&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;profiles&amp;gt;
    &amp;lt;profile&amp;gt;
      &amp;lt;id&amp;gt;ossrh&amp;lt;/id&amp;gt;
      &amp;lt;activation&amp;gt;
        &amp;lt;activeByDefault&amp;gt;true&amp;lt;/activeByDefault&amp;gt;
      &amp;lt;/activation&amp;gt;
      &amp;lt;properties&amp;gt;
        &amp;lt;gpg.executable&amp;gt;gpg&amp;lt;/gpg.executable&amp;gt;
        &amp;lt;gpg.passphrase&amp;gt;passphrase-you-used-when-created-gpg-key&amp;lt;/gpg.passphrase&amp;gt;
      &amp;lt;/properties&amp;gt;
    &amp;lt;/profile&amp;gt;
&amp;lt;/profiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s ok to have your passphrase set here as this is your user-specific
configuration file. If you don&amp;rsquo;t want to specify that, however, there will be an
option for you to provide that passphrase every time you publish.&lt;/p&gt;

&lt;h2 id=&#34;configuring-maven-to-know-the-credentials-for-sonatype-servers&#34;&gt;Configuring Maven to know the credentials for Sonatype servers&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ll provide the log-in credentials in the same &lt;code&gt;settings.xml&lt;/code&gt; maven file in
&lt;code&gt;~/.m2&lt;/code&gt; directory. If you don&amp;rsquo;t want to provide the actual username and
password, log in to your account at
&lt;a href=&#34;https://oss.sonatype.org&#34; target=&#34;_blank&#34;&gt;https://oss.sonatype.org&lt;/a&gt;. In the top right corner
click &lt;code&gt;Log-In&lt;/code&gt;, then click your username and select &lt;code&gt;Profile&lt;/code&gt;. On the new screen
there&amp;rsquo;s a dropdown with two choices: &lt;em&gt;Summary&lt;/em&gt; and &lt;em&gt;User Token&lt;/em&gt;. Select the user
token, it will give you the info. In the &lt;code&gt;settings.xml&lt;/code&gt; file add:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;  &amp;lt;servers&amp;gt;
    &amp;lt;server&amp;gt;
      &amp;lt;id&amp;gt;ossrh&amp;lt;/id&amp;gt;
      &amp;lt;username&amp;gt;user-name-token&amp;lt;/username&amp;gt;
      &amp;lt;password&amp;gt;password-for-token&amp;lt;/password&amp;gt;
    &amp;lt;/server&amp;gt;
  &amp;lt;/servers&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;satisfying-requirements-to-pass-all-checks-upon-submission-to-sonatype&#34;&gt;Satisfying requirements to pass all checks upon submission to Sonatype&lt;/h2&gt;

&lt;p&gt;There&amp;rsquo;s a lot of meta-info required to satisfy all the requirements. As you will
be using the same &lt;code&gt;groupId&lt;/code&gt; for all your artifacts, it&amp;rsquo;s easier to put all the
extra information to a parent POM. You can find an example parent project here:
&lt;a href=&#34;https://github.com/chhh/sonatype-ossrh-parent&#34; target=&#34;_blank&#34;&gt;https://github.com/chhh/sonatype-ossrh-parent&lt;/a&gt;.
This project consists only of the POM file, specifying the credentials, basic
info and publishing locations. It adds some to the &lt;code&gt;release&lt;/code&gt; target as well.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s ok to just clone that repo and change the information to what you like.
&lt;strong&gt;You will set this POM as the &lt;code&gt;&amp;lt;parent&amp;gt;&lt;/code&gt; of the projects you wish to publish to
Central.&lt;/strong&gt; As it will be the parent POM, anyone who will want to build your
artifacts will need to have that POM, so the first thing is to publish this
project to Central by itself.&lt;/p&gt;

&lt;h2 id=&#34;publishing-parent-pom-project-to-central&#34;&gt;Publishing parent POM project to Central&lt;/h2&gt;

&lt;p&gt;We&amp;rsquo;ll be using maven-release plugin. Make sure that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have SCM information configured.&lt;/li&gt;
&lt;li&gt;In this parent POM you set the &lt;code&gt;version&lt;/code&gt; to something like &lt;code&gt;0.1-SNAPSHOT&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The release plugin will use that information to create the build. It will remove
the &lt;code&gt;SNAPSHOT&lt;/code&gt; part, build the project, create a new tag in SCM, push everything
to remote, bump up the version in POM and re-add SNAPSHOT back to it. Now
execute:
&lt;code&gt;mvn release:prepare&lt;/code&gt;
&lt;code&gt;mvn release:perform&lt;/code&gt;
If you encounter any problems with &lt;code&gt;release:perform&lt;/code&gt; you can always do
&lt;code&gt;mvn release:rollback&lt;/code&gt; to undo any changes done by &lt;code&gt;release:prepare&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;publishing-the-project-to-central&#34;&gt;Publishing the project to Central&lt;/h2&gt;

&lt;p&gt;In your actual project set the &lt;code&gt;parent&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;parent&amp;gt;
    &amp;lt;groupId&amp;gt;com.github.chhh&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;sonatype-ossrh-parent&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.1&amp;lt;/version&amp;gt;
    &amp;lt;relativePath&amp;gt;../sonatype-ossrh&amp;lt;/relativePath&amp;gt;
&amp;lt;/parent&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how we used &lt;code&gt;relativePath&lt;/code&gt; to give maven a hint at where to search for
this POM. The parent project was resiging in a sibling directory next to the
project directory in this case. Otherwise the POM would have to be in the parent
directory of your project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MSFragger: ultrafast and comprehensive peptide identification in mass spectrometry–based proteomics</title>
      <link>https://chhh.github.io/publication/msfragger/</link>
      <pubDate>Thu, 19 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://chhh.github.io/publication/msfragger/</guid>
      <description></description>
    </item>
    
    <item>
      <title>BatMass: a Java Software Platform for LC–MS Data Visualization in Proteomics and Metabolomics</title>
      <link>https://chhh.github.io/publication/batmass/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chhh.github.io/publication/batmass/</guid>
      <description></description>
    </item>
    
    <item>
      <title>BatMass</title>
      <link>https://chhh.github.io/project/batmass/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chhh.github.io/project/batmass/</guid>
      <description>

&lt;p&gt;BatMass is a mass-spectrometry data visualization tool, with the main focus on being fast and interactive while providing comprehensive visualizations without any parameter tweaking. It is written in Java and built on top of the &lt;a href=&#34;https://netbeans.org/features/platform/all-docs.html&#34; target=&#34;_blank&#34;&gt;NetBeans Platform&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;referencing-the-work&#34;&gt;Referencing the work&lt;/h3&gt;

&lt;p&gt;If you use BatMass for your research or work, please cite the following paper:&lt;br /&gt;
&lt;strong&gt;&lt;a href=&#34;https://dx.doi.org/10.1021/acs.jproteome.6b00021&#34; target=&#34;_blank&#34;&gt;Avtonomov D.M. et al:
J. Proteome Res. June 16, 2016.
DOI: 10.1021/acs.jproteome.6b00021.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Support for the open standard &lt;em&gt;mzML&lt;/em&gt; and &lt;em&gt;mzXML&lt;/em&gt; mass spectrometry data types. We are hoping to bring native vendor format support as well.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Viewer synchronization. Link any number of viewers and zooming/panning will be synchronized across them. If you&amp;rsquo;re viewing MS&lt;sup&gt;1&lt;/sup&gt; data in one view and MS&lt;sup&gt;2&lt;/sup&gt; data in the other the retention time is synchronized, while m/z is not. Open a detected LC/MS feature table or a peptide identification table, a double click on the row will open the corresponding spectrum, or bring you to the corresponding location in a 2D Map viewer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Data access layer. For the Java developers out there, the highly optimized mzML/mzXML parsers can be used in any standalone Java program as a simple &lt;em&gt;jar&lt;/em&gt; dependency. Parsing has been manually tuned to produce few garbage objects, thus minimizing time spent in GC (Garbage Collection), the speed is comparable to or better than in C/C++ implementations. The API for LC/MS data files gives access to most of the features supported by mzML/mzXML standards.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;demo-video&#34;&gt;Demo Video&lt;/h2&gt;

&lt;p&gt;Here&amp;rsquo;s a short demo video of BatMass in action.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/EY9wvd6ckb0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;h2 id=&#34;some-examples&#34;&gt;Some Examples&lt;/h2&gt;

&lt;p&gt;The layout of windows is free and customizable by dragging.
&lt;img src=&#34;https://chhh.github.io/img/about-batmass/free-layout.png&#34; alt=&#34;Free window layoyt&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Compare multiple experiments at once. The bottom-middle run in this figure is a blank (no sample was injected), while the other 5 were runs with some sample. Amazing how much stuff comes from the background.
&lt;img src=&#34;https://chhh.github.io/img/about-batmass/comparison-6-runs-1-blank.png&#34; alt=&#34;Multi experiment comparison in Map2D&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And here are the same runs but zoomed in to a small region of m/z and retentino time. Look at the color-marked regions. Let&amp;rsquo;s just accept that zero-values are a thing, there is no need to try extracting noise to do gap-filling in data.
&lt;img src=&#34;https://chhh.github.io/img/about-batmass/comparison-6-runs-1-blank-02-zoom-marked.png&#34; alt=&#34;Multi experiment comparison in Map2D zoomed&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;contacts&#34;&gt;Contacts&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The author and maintainer of the project&lt;/strong&gt;&lt;br /&gt;
Dmitry Avtonomov, Ph.D.&lt;br /&gt;
University of Michigan, Ann Arbor&lt;br /&gt;
Email: {{ config.params.name }}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;General inquiries&lt;/strong&gt;&lt;br /&gt;
Alexey Nesvizhskii, Ph.D.&lt;br /&gt;
University of Michigan, Ann Arbor&lt;br /&gt;
Email: nesvi@umich.edu&lt;br /&gt;
&lt;a href=&#34;http://www.nesvilab.org&#34; target=&#34;_blank&#34;&gt;http://www.nesvilab.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/chhh/batmass/issues&#34; target=&#34;_blank&#34;&gt;bug tracker&lt;/a&gt; to ask questions, submit feature requests and bug reports.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MSFTBX: MS File Toolbox</title>
      <link>https://chhh.github.io/project/msftbx/</link>
      <pubDate>Tue, 26 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chhh.github.io/project/msftbx/</guid>
      <description>&lt;p&gt;A fast Java library for mass spectrometry data files access (mzML, mzXML, pepXML, protXML, mzId, mzIdentML, etc). Writers for some formats are also available. Available on &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22msftbx%22&#34; target=&#34;_blank&#34;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
