<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Dmitry Avtonomov</title>
    <link>https://dmtavt.com/post/</link>
      <atom:link href="https://dmtavt.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2016-present Dmitry Avtonomov</copyright><lastBuildDate>Wed, 17 Jun 2020 10:17:37 -0700</lastBuildDate>
    <image>
      <url>https://dmtavt.com/images/icon_hua06b220db3e60330d8fb3c0279ba5942_14310_512x512_fill_gaussian_center_2.png</url>
      <title>Posts</title>
      <link>https://dmtavt.com/post/</link>
    </image>
    
    <item>
      <title>Parallel producer-consumer queues with nice backpressure support</title>
      <link>https://dmtavt.com/post/2020-06-17_parallel-producer-consumer-queues/</link>
      <pubDate>Wed, 17 Jun 2020 10:17:37 -0700</pubDate>
      <guid>https://dmtavt.com/post/2020-06-17_parallel-producer-consumer-queues/</guid>
      <description>&lt;h2 id=&#34;preamble&#34;&gt;Preamble&lt;/h2&gt;
&lt;p&gt;Many programs do some sort of data transform and can be described as
read/generate some data, process the data, write the output. It&amp;rsquo;s always beneficial
if some steps are performed in parallel. E.g. the reader pre-fetches a few data items
so that when the &amp;lsquo;processing&amp;rsquo; part of the program is ready for a new chunk of data
the data is already there waiting. Ths post provides two quick solutions for java and
C#. Java with 
&lt;a href=&#34;https://projectreactor.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Project Reactor&lt;/a&gt;
. C# using 
&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/dataflow-task-parallel-library&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TPL Dataflow&lt;/a&gt;

(Task Parallel Library).&lt;/p&gt;
&lt;h1 id=&#34;c-tpl-dataflow&#34;&gt;C# TPL Dataflow&lt;/h1&gt;
&lt;p&gt;The example code produces (reads etc.) new items concurrently with processing said items, maintaining a read-ahead buffer. The completion signal is sent to the head of the chain when the &amp;ldquo;producer&amp;rdquo; has no more items. The program also awaits the completion of the whole chain before terminating.&lt;br&gt;
Posted in 
&lt;a href=&#34;https://stackoverflow.com/questions/61951466/backpressure-via-bufferblock-not-working-c-tpl-dataflow/62012626#62012626&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this StackOverflow thread&lt;/a&gt;
 on the topic.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-csharp&#34;&gt;static async Task Main() {

    string Time() =&amp;gt; $&amp;quot;{DateTime.Now:hh:mm:ss.fff}&amp;quot;;

    // the buffer is added to the chain just for demonstration purposes
    // the chain would work fine using just the built-in input buffer
    // of the `action` block.
    var buffer = new BufferBlock&amp;lt;int&amp;gt;(new DataflowBlockOptions {BoundedCapacity = 3});

    var action = new ActionBlock&amp;lt;int&amp;gt;(async i =&amp;gt;
    {
        Console.WriteLine($&amp;quot;[{Time()}]: Processing: {i}&amp;quot;);
        await Task.Delay(500);
    }, new ExecutionDataflowBlockOptions {MaxDegreeOfParallelism = 2, BoundedCapacity = 2});

    // it&#39;s necessary to set `PropagateCompletion` property
    buffer.LinkTo(action, new DataflowLinkOptions {PropagateCompletion = true});

    //Producer
    foreach (var i in Enumerable.Range(0, 10))
    {
        Console.WriteLine($&amp;quot;[{Time()}]: Ready to send: {i}&amp;quot;);
        await buffer.SendAsync(i);
        Console.WriteLine($&amp;quot;[{Time()}]: Sent: {i}&amp;quot;);
    }

    // we call `.Complete()` on the head of the chain and it&#39;s propagated forward
    buffer.Complete(); 

    await action.Completion;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;java-project-reactor&#34;&gt;Java, Project Reactor&lt;/h1&gt;
&lt;p&gt;Reactive processing: async IO producer with prefetch and in-order consumers (Project Reactor 3.x).
Posted to 
&lt;a href=&#34;https://stackoverflow.com/questions/61885623/reactive-processing-async-io-producer-with-prefetch-and-in-order-consumers-mwe/61930266#61930266&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this StackOverflow thread&lt;/a&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;problem-statement&#34;&gt;Problem statement:&lt;/h3&gt;
&lt;p&gt;Do I/O in chunks. Start processing chunks as soon as one becomes available, while further chunks are being read in background (but not more than &lt;em&gt;X&lt;/em&gt; chunks are read ahead). Process chunks in parallel as they are being received. Consume each processed chunk in-order-of-reading, i.e. in original order of the chunk being read.&lt;/p&gt;
&lt;h3 id=&#34;pseudo-rx-code-explanation-of-what-wed-like-to-achieve&#34;&gt;Pseudo-Rx code explanation of what we&amp;rsquo;d like to achieve:&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Flux.fromFile(path, some-function-to-define-chunk)
   // done with Flux.generate in MWE below

 .prefetchOnIoThread(x-count: int)
   // at this point we try to maintain a buffer filled with x-count pre-read chunks

 .parallelMapOrdered(n-threads: int, limit-process-ahead: int)
   // n-threads: are constantly trying to drain the x-count buffer, doing some transformation
   // limit-process-ahead: as the operation results are needed in order, if we encounter an
   // input element that takes a while to process, we don&#39;t want the pipeline to run too far
   // ahead of this problematic element (to not overflow the buffers and use too much memory)

 .consume(TMapped v)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;my-solution&#34;&gt;My solution&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;final int threads = 2;
final int prefetch = 3;

Flux&amp;lt;Integer&amp;gt; gen = Flux.generate(AtomicInteger::new, (ai, sink) -&amp;gt; {
  int i = ai.incrementAndGet();
  if (i &amp;gt; 10) {
    sink.complete();
  } else {
    sink.next(i);
  }
  return ai;
});

gen.parallel(threads, prefetch)             // switch to parallel processing after genrator
    .runOn(Schedulers.parallel(), prefetch) // if you don&#39;t do this, it won&#39;t run in parallel
    .map(i -&amp;gt; i + 1000)                     // this is done in parallel
    .ordered(Integer::compareTo)            // you can do just .sequential(), which is faster
    .subscribeOn(Schedulers.elastic())      // generator will run on this scheduler (once subscribed)
    .subscribe(i -&amp;gt; {
      System.out.printf(&amp;quot;Transformed integer: &amp;quot; + i); // do something with generated and processed item
    });
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Auto Resize Guest VM Desktop running under VMWare</title>
      <link>https://dmtavt.com/post/2020-05-14-auto-resize-guest-vm-desktop/</link>
      <pubDate>Thu, 14 May 2020 00:23:27 -0700</pubDate>
      <guid>https://dmtavt.com/post/2020-05-14-auto-resize-guest-vm-desktop/</guid>
      <description>&lt;h2 id=&#34;symptopms&#34;&gt;Symptopms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;After first reboot of VM destop of guest OS stopped auto-resizing to fill host window.&lt;/li&gt;
&lt;li&gt;But it was working fine during guest OS install, or while it was running from live cd.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR;&lt;/h2&gt;
&lt;p&gt;Restart &lt;code&gt;vmtoolsd&lt;/code&gt; service.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On Manjaro / Arch&lt;/strong&gt;:&lt;br&gt;
&lt;code&gt;sudo systemctl restart vmtoolsd&lt;/code&gt;&lt;br&gt;
Has to be done after every boot-up. And sometimes after session locks out as well.&lt;/p&gt;
&lt;p&gt;Some suggest that delaying the start of the service helps:&lt;br&gt;
&lt;code&gt;sudo vim /etc/systemd/system/multi-user.target.wants/vmtoolsd.service&lt;/code&gt;&lt;br&gt;
and add the folowing in [Unit] section:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Unit]
After=graphical.target
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Didn&amp;rsquo;t help me.&lt;/p&gt;
&lt;h2 id=&#34;a-bit-more-context&#34;&gt;A bit more context&lt;/h2&gt;
&lt;p&gt;VMWare Workstation requires you to have &lt;code&gt;open-vm-tools&lt;/code&gt; package service installed, which actually does the resizing.
I was running Manjaro 20 under VMWare Workstation 15 on Win10 Pro. Open VM Tools was already pre-installed with
Manjaro distribution.&lt;br&gt;
However it seems like the service named &lt;code&gt;vmtoolsd&lt;/code&gt; starts too early. On the internet everyone mentions &lt;code&gt;open-vm-tools&lt;/code&gt;,
but it probably changed name to &lt;code&gt;vmtoolsd&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;possible-solutions&#34;&gt;Possible solutions&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vmware/open-vm-tools/issues/253&#34;&gt;https://github.com/vmware/open-vm-tools/issues/253&lt;/a&gt;
&lt;a href=&#34;https://github.com/vmware/open-vm-tools/issues/303&#34;&gt;https://github.com/vmware/open-vm-tools/issues/303&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing ExpressVPN client on Manjaro Linux</title>
      <link>https://dmtavt.com/post/2020-05-13-expressvpn-on-manjaro/</link>
      <pubDate>Tue, 12 May 2020 12:30:18 -0800</pubDate>
      <guid>https://dmtavt.com/post/2020-05-13-expressvpn-on-manjaro/</guid>
      <description>&lt;h2 id=&#34;solution-origin---awesome-manjaro-forums&#34;&gt;Solution origin - awesome Manjaro forums&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://forum.manjaro.org/t/installing-expressvpn-on-manjaro-how-to/125345/9&#34;&gt;https://forum.manjaro.org/t/installing-expressvpn-on-manjaro-how-to/125345/9&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;h3 id=&#34;remove-old-install-optional&#34;&gt;Remove old install (optional)&lt;/h3&gt;
&lt;p&gt;Stop and remove old install of expressvpn, if present:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;expressvpn disconnect
sudo systemctl stop expressvpn
sudo systemctl disable expressvpn
sudo pacman -Rns expressvpn

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;install-new-package-from-expressvpn-website&#34;&gt;Install new package from ExpressVPN website&lt;/h3&gt;
&lt;p&gt;ExpressVPN website provides a package for Arch now. Manjaro is based on Arch, so that&amp;rsquo;s what we need.&lt;br&gt;
Download 64 bit &lt;code&gt;.pkg.tar.xz&lt;/code&gt; Arch package: &lt;a href=&#34;https://www.expressvpn.com/setup#linux&#34;&gt;https://www.expressvpn.com/setup#linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;if you have a fresh install of manjaro:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;go to expressvpn and download the Arch 64 bit version and copy the activation code&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;install it via pacman&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo pacman -U /path/to/expressvpn.package.tar.xz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;copy the service scripts to the correct location&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo cp /usr/lib/expressvpn/expressvpn*.service /etc/systemd/system/.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;enable and start the service&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl enable expressvpn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo systemctl start expressvpn&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;activate it with the activation code you copied earlier&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;expressvpn activate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connect vpn&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;expressvpn connect smart&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you connect, expressvpn gives you some valuable infor you might miss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To check your connection status, type &lt;code&gt;expressvpn status&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If your VPN connection unexpectedly drops, internet traffic will be blocked to protect your privacy.&lt;/li&gt;
&lt;li&gt;To disable Network Lock, disconnect ExpressVPN then type &amp;lsquo;expressvpn preferences set network_lock off&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Fixing VMWare Workstation `Device/Credential Guard are not compatible` and `64-bit Guest OS can&#39;t run on 32-bit host` errors</title>
      <link>https://dmtavt.com/post/2020-05-13-vmware-player-fix/</link>
      <pubDate>Tue, 12 May 2020 12:00:18 -0800</pubDate>
      <guid>https://dmtavt.com/post/2020-05-13-vmware-player-fix/</guid>
      <description>&lt;h2 id=&#34;symptoms&#34;&gt;Symptoms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VMWare Wrokstation Player shows a warning when you try to create a new 64-bit VM on a 64-bit host (Win10 Pro host in my case)&lt;/li&gt;
&lt;li&gt;VMWare Wrokstation Player just starts the vm, shows black screen and then an error message pops up, saying: 
&lt;code&gt;VMWare Workstation and Device/Credential Guard are not compatible.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disable &lt;code&gt;Hyper-V&lt;/code&gt; and &lt;code&gt;Windows Sandbox&lt;/code&gt; in &lt;em&gt;Windows Features&lt;/em&gt; (&lt;em&gt;Control Panel -&amp;gt; Programs -&amp;gt; Turn Windows Features On or Off&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Enable processor virtualization in BIOS&lt;/li&gt;
&lt;li&gt;From elevated CMD (run as administrator):
&lt;pre&gt;&lt;code&gt;bcdedit /set hypervisorlaunchtype off
shutdown /r /t 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;some-details-of-what-might-be-wrong&#34;&gt;Some details of what might be wrong&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make sure vitualization is turned on for the processor in BIOS (this step varies by BIOS manufacturer)&lt;/li&gt;
&lt;li&gt;In Windows&amp;rsquo; features check that &lt;code&gt;Hyper-V&lt;/code&gt; and &lt;code&gt;Windows Sandbox&lt;/code&gt; are not enabled.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;my-experience&#34;&gt;My experience&lt;/h2&gt;
&lt;p&gt;I had &lt;code&gt;Windows Sandbox&lt;/code&gt; enabled in the first place. This was causing VMWare Workstation 15.5.2 to show the warning about 64-bit guest
on 32-bit host. Even though the host was 64-bit in fact. I then uninstalled &lt;code&gt;Windows Sandbox&lt;/code&gt; via &lt;code&gt;Add/Remove Windows Features&lt;/code&gt; menu.
Then I started getting the more common &lt;em&gt;Device/Credential Guard are not compatible&lt;/em&gt; error message.&lt;br&gt;
Running from elevated CMD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    bcdedit /set hypervisorlaunchtype off
    shutdown /r /t 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Did the final trick.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zipping all relevant files in a git repo</title>
      <link>https://dmtavt.com/post/2020-01-26-zipping-git-repo/</link>
      <pubDate>Sun, 26 Jan 2020 18:34:18 -0800</pubDate>
      <guid>https://dmtavt.com/post/2020-01-26-zipping-git-repo/</guid>
      <description>&lt;p&gt;This will skip all the unnecessary stuff, like &lt;code&gt;.git&lt;/code&gt; directory,
and files ignored in the git repo itself:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git archive --format=zip -o archive-name.zip HEAD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can omit &lt;code&gt;--format.zip&lt;/code&gt; when you specify output files via &lt;code&gt;-o&lt;/code&gt;,
the format will be inferred.&lt;br&gt;
Add &lt;code&gt;--prefix  subdir-name&lt;/code&gt; to have all files in the archive be put into a folder inside the archive, e.g:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git archive --prefix subdir-name/ -o archive-name.zip HEAD&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding all existing submodules to a git repo</title>
      <link>https://dmtavt.com/post/2018-11-25-adding-all-git-submodules/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 -0800</pubDate>
      <guid>https://dmtavt.com/post/2018-11-25-adding-all-git-submodules/</guid>
      <description>&lt;p&gt;You have a git repo (a directory) which contains sub-directories which are git
repos themselves and now you want them to become submodules. Here&amp;rsquo;s a quick
automatic way to add them all.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;-maxdepth&lt;/code&gt; if you want to recursively dig deeper than 1 level.&lt;/li&gt;
&lt;li&gt;Assumes that each submodule has a remote named &lt;code&gt;origin&lt;/code&gt;, uses that remote&amp;rsquo;s
url.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;preview-command&#34;&gt;Preview command&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do if [ -d &amp;quot;${x}/.git&amp;quot; ] ; then cd &amp;quot;${x}&amp;quot; ; origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ; cd - 1&amp;gt;/dev/null; echo git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ; fi ; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will &lt;strong&gt;only print&lt;/strong&gt; the submodule commands to be executed, but NOT execute them.&lt;/p&gt;
&lt;h3 id=&#34;actual-command&#34;&gt;Actual command&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do if [ -d &amp;quot;${x}/.git&amp;quot; ] ; then cd &amp;quot;${x}&amp;quot; ; origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ; cd - 1&amp;gt;/dev/null; git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ; fi ; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will &lt;strong&gt;execute&lt;/strong&gt; the actual submodule commands.&lt;/p&gt;
&lt;h2 id=&#34;readable-versions&#34;&gt;Readable versions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Preview&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do 
  if [ -d &amp;quot;${x}/.git&amp;quot; ] ;
    then cd &amp;quot;${x}&amp;quot; ;
    origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ;
    cd - 1&amp;gt;/dev/null;
    echo git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ;
  fi ;
done
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Execute&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for x in $(find . -mindepth 1 -maxdepth 1 -type d) ; do 
  if [ -d &amp;quot;${x}/.git&amp;quot; ] ; 
    then cd &amp;quot;${x}&amp;quot; ; 
    origin=&amp;quot;$(git config --get remote.origin.url)&amp;quot; ; 
    cd - 1&amp;gt;/dev/null; 
    git submodule add &amp;quot;${origin}&amp;quot; &amp;quot;${x}&amp;quot; ; 
  fi ; 
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Credit (modified from an answer here)&lt;/em&gt;:&lt;br&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/10606101/automatically-add-all-submodules-to-a-repo&#34;&gt;https://stackoverflow.com/questions/10606101/automatically-add-all-submodules-to-a-repo&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Custom nice colors in Windows shells</title>
      <link>https://dmtavt.com/post/2018-10-11-custom-colors-in-win-shells/</link>
      <pubDate>Thu, 11 Oct 2018 00:00:00 -0700</pubDate>
      <guid>https://dmtavt.com/post/2018-10-11-custom-colors-in-win-shells/</guid>
      <description>&lt;p&gt;We&amp;rsquo;ll be using 
&lt;a href=&#34;https://scoop.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scoop&lt;/a&gt;
 to install the necessary tools.&lt;/p&gt;
&lt;h2 id=&#34;quickstart-with-scoop&#34;&gt;Quickstart with scoop&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;git&lt;/code&gt; separately. Here&amp;rsquo;s the link: &lt;a href=&#34;https://gitforwindows.org&#34;&gt;https://gitforwindows.org&lt;/a&gt;. I recommend the following customizations in the installer:
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Use Notepad++ as default editor&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Use True Type fonts in all console windows&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Check out as-is, commit as-is&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Win+ R&lt;/code&gt; -&amp;gt; &lt;code&gt;powershell&lt;/code&gt;. In PowerShell (answer &amp;lsquo;&lt;strong&gt;Y&lt;/strong&gt;&amp;rsquo; when asked):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy RemoteSigned -scope CurrentUser
iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;scoop is now installed, if you had any open cmd windows - close them now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;colors-for-cmdexe-and-powershell&#34;&gt;Colors for cmd.exe and PowerShell&lt;/h2&gt;
&lt;p&gt;Install &lt;code&gt;concfg&lt;/code&gt; using &lt;code&gt;scoop&lt;/code&gt; or from here: &lt;a href=&#34;https://github.com/lukesampson/concfg&#34;&gt;https://github.com/lukesampson/concfg&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop install concfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Command to import the colorscheme:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;concfg import &amp;lt;path-to-json&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Color scheme as a gihib gist:&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/chhh/9d01a3a822c7e84cd5666293b5989aaa.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Installing OMV 4 (Open Media Vault) to Raspberry Pi 3&#43;</title>
      <link>https://dmtavt.com/post/2018-10-01-install-omv-on-pi/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 -0700</pubDate>
      <guid>https://dmtavt.com/post/2018-10-01-install-omv-on-pi/</guid>
      <description>&lt;h2 id=&#34;setting-up-raspberry-pi&#34;&gt;Setting up Raspberry Pi&lt;/h2&gt;
&lt;p&gt;Download the 
&lt;a href=&#34;https://www.openmediavault.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OMV&lt;/a&gt;
 image (yes, 
&lt;a href=&#34;https://sourceforge.net/projects/openmediavault/files/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the binaries are
hosted at sourceforge&lt;/a&gt;

still) and burn it to an SD card using 
&lt;a href=&#34;https://etcher.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Etcher&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Default loing/password is (IIRC): admin/openmediavault. I highly recommend
setting up a preferred fixed IP address for you Pi on the router.&lt;/p&gt;
&lt;h2 id=&#34;using-all-the-space-on-the-system-sd-card&#34;&gt;Using all the space on the system SD card&lt;/h2&gt;
&lt;p&gt;I used a 64GB card, but OMV only needs a gig or so. Reboot once, the partition
for OMV will be be auto-resized. A third partition on the SD card will be
created, but without a filesystem, check it out with &lt;code&gt;lsblk&lt;/code&gt; command. Remember
the name of the partition.&lt;/p&gt;
&lt;p&gt;To add a filesystem to this partition use :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkfs.ext4 -L &amp;lt;your-label&amp;gt; /dev/&amp;lt;the-partition-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can now go to the &lt;code&gt;Web Console -&amp;gt; Storage -&amp;gt; File Systems&lt;/code&gt;, locate the new
partition and Mount it. It can now be used to store the data.&lt;/p&gt;
&lt;h2 id=&#34;setting-up-an-hdd&#34;&gt;Setting up an HDD&lt;/h2&gt;
&lt;p&gt;I have a 1TB 2.5&amp;rdquo; HDD (HGST Travelstar 7K1000, 
&lt;a href=&#34;http://a.co/d/3vifPYg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon
link&lt;/a&gt;
) in a simple USB 3 enclosure. The Pi struggled to
power the HDD though, so I bought an powered USB hub (Anker 4-port powered USB
hub, 
&lt;a href=&#34;http://a.co/d/bqRz17R&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon link&lt;/a&gt;
). Haven&amp;rsquo;t tried it yet, but it&amp;rsquo;s quite
possible you can power up to 4 HDDs this way and use them all with a single Pi.&lt;/p&gt;
&lt;p&gt;Just plug the HDD in the hub, the hub into wall power and the Pi - you&amp;rsquo;re ready
to go. Reboot the Pi. Go to the web admin console. &lt;code&gt;Storage -&amp;gt; Disks&lt;/code&gt;, check
that you see the new HDD there, probably as &lt;code&gt;/dev/sda1&lt;/code&gt;.&lt;code&gt;Storage -&amp;gt; File Systems -&amp;gt; +Create&lt;/code&gt; (there&amp;rsquo;s a button in the top row), create a new &lt;em&gt;ext4&lt;/em&gt; filesystem on
the HDD.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-shared-folder-available-from-your-local-network&#34;&gt;Creating a shared folder available from your local network&lt;/h2&gt;
&lt;p&gt;To enable file sharing using this HDD check that &lt;code&gt;Services -&amp;gt; SMB/CIFS&lt;/code&gt; is
enabled. &lt;code&gt;Access Right Management -&amp;gt; Shared Folders -&amp;gt; +Add&lt;/code&gt; and add a folder on
the hard drive. You might also need to go to &lt;code&gt;Access Right Management -&amp;gt; User&lt;/code&gt;
and add a new user, click &lt;code&gt;Privileges&lt;/code&gt; and grant the new user access to the
shared folder.&lt;/p&gt;
&lt;p&gt;On Windows you can now open Explorer and &lt;code&gt;Map network drive&lt;/code&gt;. Put in an address
like &lt;code&gt;\\192.168.1.176\my-share&lt;/code&gt;. If all was right, it should ask you for
login/password. Check the box &lt;em&gt;log in using different credentials&lt;/em&gt; and supply
the username and password for the user that you&amp;rsquo;ve just created through OMV
admin web page.&lt;/p&gt;
&lt;h2 id=&#34;setting-up-backup-of-your-cloud-based-storage-to-the-local-hdd-connected-to-pi&#34;&gt;Setting up backup of your cloud-based storage to the local HDD connected to Pi&lt;/h2&gt;
&lt;p&gt;Log in to RPi from ssh. Install RClone (&lt;a href=&#34;https://rclone.org&#34;&gt;https://rclone.org&lt;/a&gt;). Worked fine from
the script installation for me. Run &lt;code&gt;rclone configure&lt;/code&gt; to set up Google Drive
integration. When asked to do &amp;ldquo;interactive&amp;rdquo; setup, say No. Then you can just
copy the given link and follow it on another computer with an actual browser.
Lynx won&amp;rsquo;t do, as the Google authentication page needs javascript.&lt;/p&gt;
&lt;p&gt;Give it a go while ssh&amp;rsquo;ed into the Pi. When everything works, you can go to the
OMV admin panel &lt;code&gt;System -&amp;gt; Scheduled Jobs&lt;/code&gt;, which is basically a UI for adding
cron jobs, and add your &lt;code&gt;rclone sync&lt;/code&gt; or &lt;code&gt;rclone copy&lt;/code&gt; command to run, e.g.
every night at 3AM.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use p4merge from Perforce as default git mergetool</title>
      <link>https://dmtavt.com/post/2018-09-07-p4merge-as-git-merge-tool/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 -0700</pubDate>
      <guid>https://dmtavt.com/post/2018-09-07-p4merge-as-git-merge-tool/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;p4merge-conflict-resolution.png&#34; alt=&#34;p4merge-conflict-resolution-screenshot&#34;&gt;&lt;/p&gt;
&lt;p&gt;A while ago this took more effort as described 
&lt;a href=&#34;https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in this
link&lt;/a&gt;
 (scroll
to section  &amp;lsquo;External Merge and Diff Tools&amp;rsquo;).&lt;/p&gt;
&lt;p&gt;Not anymore. Now git natively supports p4merge. So you only need to modify your
global git config (&lt;code&gt;~/.gitconfig&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[merge]
	tool = p4merge
[mergetool &amp;quot;p4merge&amp;quot;]
	path = p4merge.exe
[diff]
	tool = p4merge
[difftool &amp;quot;p4merge&amp;quot;]
	path = p4merge.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can provide the absolute path to the p4merge binary, but I have it on PATH
because I installed it with 
&lt;a href=&#34;https://scoop.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scoop&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id=&#34;install-p4merge-with-scoop&#34;&gt;Install p4merge with scoop&lt;/h2&gt;
&lt;p&gt;To get scoop, from the PowerShell execute:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy RemoteSigned -scope CurrentUser
iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;p4merge&lt;/em&gt; is in the 
&lt;a href=&#34;https://github.com/lukesampson/scoop-extras&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;extras&lt;/strong&gt;
scoop bucket&lt;/a&gt;
, add the bucket first
to be able to install it easily:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop bucket add extras
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then you can install p4merge&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;scoop update
scoop search p4merge
scoop install p4merge
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To list all you installed scoop apps with PowerShell:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;(scoop list) | sls &#39;^  (\w+)&#39; |% { $_.matches.groups[1].value }
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;full-gitconfig&#34;&gt;Full .gitconfig&lt;/h2&gt;
&lt;p&gt;My full &lt;code&gt;.gitconfig&lt;/code&gt; is below. It &lt;code&gt;[include]&lt;/code&gt;s two paths &lt;code&gt;.gitaliases&lt;/code&gt; and
&lt;code&gt;.gitmorealiases&lt;/code&gt;, they are both just text files in my home directory, i.e.
they are siblings of my global &lt;code&gt;.gitconfig&lt;/code&gt; file. They contain, you guessed
it, &lt;strong&gt;git aliases&lt;/strong&gt;.
A large collection of aliases is 
&lt;a href=&#34;https://github.com/GitAlias/gitalias&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;available
here&lt;/a&gt;
. And 
&lt;a href=&#34;https://haacked.com/archive/2014/07/28/github-flow-aliases/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here is a very useful blog
post / tutorial&lt;/a&gt;

introducing you to the usefulness of aliases.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/chhh/c226cd37725ee6deb7a0.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Bring back &#34;Open command window here&#34; context menu item in Windows</title>
      <link>https://dmtavt.com/post/2018-06-27-command-prompt-here/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 -0700</pubDate>
      <guid>https://dmtavt.com/post/2018-06-27-command-prompt-here/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s a simple registry hack.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Strat registry editor: &lt;em&gt;Run&lt;/em&gt; -&amp;gt; &lt;code&gt;regedit&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;code&gt;HKEY_CLASSES_ROOT\Directory\shell\cmd&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Right-click the &lt;em&gt;cmd&lt;/em&gt; (folder) key, and click &lt;em&gt;Permissions&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;Advanced&lt;/em&gt; button.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Advanced Security Settings&lt;/em&gt; dialog will open, at the top next to &lt;em&gt;Owner&lt;/em&gt; click &lt;em&gt;Change&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Put in your account name, click &lt;em&gt;Check Names&lt;/em&gt; to make sure domain etc is set up correctly, click &lt;em&gt;OK&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Check the &lt;em&gt;Replace owner on subcontainers and objects&lt;/em&gt; check box near &lt;em&gt;Owner&lt;/em&gt; field.&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Apply&lt;/em&gt;, &lt;em&gt;OK&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;In the now open &lt;em&gt;Premissions&lt;/em&gt; dialog, select &lt;strong&gt;Administrators&lt;/strong&gt;, check &lt;strong&gt;Full Control&lt;/strong&gt; checkbox below.&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Apply&lt;/em&gt;, &lt;em&gt;OK&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;You are now back in the registry editor. Click the &lt;code&gt;cmd&lt;/code&gt; folder on the left.&lt;/li&gt;
&lt;li&gt;Look for &lt;code&gt;HideBasedOnVelocityId&lt;/code&gt; key in the right window tab.
&lt;ul&gt;
&lt;li&gt;If it&amp;rsquo;s there, Right-click, &lt;em&gt;Rename&lt;/em&gt; to &lt;code&gt;ShowBasedOnVelocityId&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If it&amp;rsquo;s not there, just add the &lt;code&gt;ShowBasedOnVelocityId&lt;/code&gt; key (type &lt;em&gt;DWORD&lt;/em&gt;), value &lt;code&gt;0x00639bc8 (6527944)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now try &lt;em&gt;Shift + Right Click&lt;/em&gt; in an Explorer window, you should see the &lt;em&gt;Open command window here&lt;/em&gt; option.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Set up custom domain name with GitHub pages</title>
      <link>https://dmtavt.com/post/2018-05-07-custom-domain-name-with-github-pages/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 -0700</pubDate>
      <guid>https://dmtavt.com/post/2018-05-07-custom-domain-name-with-github-pages/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;The whole process for various situations is described in 
&lt;a href=&#34;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub
documentation&lt;/a&gt;
.
This is just a reminder for myself how to properly configure top-level apex domain
redirect with GitHub Pages.&lt;/p&gt;
&lt;p&gt;All of your &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; or &lt;code&gt;&amp;lt;orgname&amp;gt;.github.io&lt;/code&gt; pages will be
redirected to the new custom domain, so your project pages can benefit from this
automatically. If you already have a project page like
&lt;code&gt;&amp;lt;username&amp;gt;.github.io/projectname&lt;/code&gt;, this will become &lt;code&gt;&amp;lt;custom.domain&amp;gt;/projectname&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;sequence-of-actions&#34;&gt;Sequence of actions&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s say you own &lt;code&gt;domain.com&lt;/code&gt; for the sake of example, and your github username
is &lt;code&gt;yourname&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;on-github&#34;&gt;On GitHub&lt;/h3&gt;
&lt;p&gt;Create a repository with name &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; or
&lt;code&gt;&amp;lt;orgname&amp;gt;.github.io&lt;/code&gt; depending on the repo type.&lt;/p&gt;
&lt;p&gt;Create a repo &lt;code&gt;yourname.github.io&lt;/code&gt; add a file called &lt;code&gt;CNAME&lt;/code&gt; with the following
contents to the root directory:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;domain.com
www.domain.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you prefer the name with &lt;em&gt;www&lt;/em&gt; prefix, put it at the top. Commit and push.
That&amp;rsquo;s it with github.&lt;/p&gt;
&lt;h3 id=&#34;at-dns-provider-config&#34;&gt;At DNS provider config&lt;/h3&gt;
&lt;p&gt;Add an A record:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: @
type: A
TTL : 1h
data: [185.199.108.153, 185.199.109.153, 185.199.110.153, 185.199.111.153]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add a CNAME record:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;name: www
type: CNAME
TTL : 1h
data: yourname.github.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With &lt;em&gt;domains.google.com&lt;/em&gt; this looks like the following:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;chhh-github-io-dns-config.png&#34; alt=&#34;domains-google-com-config-screenshot&#34;&gt;&lt;/p&gt;
&lt;p&gt;It might take several hours for the information to propagate throughout
the net and become accessible everywhere.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using multiple different shells/subsystems on Windows</title>
      <link>https://dmtavt.com/post/2018-03-07-shells-on-windows/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 -0800</pubDate>
      <guid>https://dmtavt.com/post/2018-03-07-shells-on-windows/</guid>
      <description>&lt;p&gt;Shells to be used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cmd.exe&lt;/li&gt;
&lt;li&gt;MINGW from 
&lt;a href=&#34;https://git-scm.com/download/win&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://cygwin.com/install.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cygwin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Optionally 
&lt;a href=&#34;http://www.msys2.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MSYS2&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the above are managed through one shell manager -

&lt;a href=&#34;https://conemu.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ConEmu&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;First install all the shells, then ConEmu.&lt;/p&gt;
&lt;h2 id=&#34;easy-installation-of-useful-dev-tools&#34;&gt;Easy installation of useful dev tools&lt;/h2&gt;
&lt;p&gt;Use 
&lt;a href=&#34;http://scoop.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scoop&lt;/a&gt;
 to install basic utilities and languages.
Install from powershell (without admin rights):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Set-ExecutionPolicy RemoteSigned -scope CurrentUser
iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using command &lt;code&gt;scoop export&lt;/code&gt; you can get an importable list of all installed packages.
Here&amp;rsquo;s mine currently: 
&lt;a href=&#34;scoop-export.txt&#34;&gt;scoop-export.txt&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id=&#34;tweaks-to-shells&#34;&gt;Tweaks to shells&lt;/h2&gt;
&lt;h3 id=&#34;cmdexe&#34;&gt;cmd.exe&lt;/h3&gt;
&lt;p&gt;To get auto-completion support similar to what you get in &lt;em&gt;bash&lt;/em&gt;, install

&lt;a href=&#34;https://mridgers.github.io/clink/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clink&lt;/a&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;conemu&#34;&gt;ConEmu&lt;/h3&gt;
&lt;p&gt;&lt;kbd&gt;Win + Alt + P&lt;/kbd&gt; to open Properties. &lt;code&gt;Startup -&amp;gt; Tasks&lt;/code&gt; and set shortcuts for
shells you&amp;rsquo;ll be using.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt + C&lt;/code&gt; for &lt;em&gt;cmd.exe&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + Shift + C&lt;/code&gt; for elevated &lt;em&gt;cmd.exe&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + W&lt;/code&gt; for &lt;em&gt;MINGW&lt;/em&gt; from &lt;em&gt;git&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + Y&lt;/code&gt; for &lt;em&gt;Cygwin&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The full config is 
&lt;a href=&#34;ConEmu_chhh-2018-03-07.xml&#34;&gt;here&lt;/a&gt;
, can be imported at installation time.&lt;/p&gt;
&lt;h3 id=&#34;cygwin&#34;&gt;Cygwin&lt;/h3&gt;
&lt;p&gt;Basic packages to install throught &lt;em&gt;setup.exe&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wget&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;lynx&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is little known package manager that can be used from inside cygwin without having
to run &lt;em&gt;setup.exe&lt;/em&gt; all the time: 
&lt;a href=&#34;https://github.com/transcode-open/apt-cyg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;apt-cyg&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Installation&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lynx -source rawgit.com/transcode-open/apt-cyg/master/apt-cyg &amp;gt; apt-cyg
install apt-cyg /bin
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Solving problems with tethering wifi from an Android phone</title>
      <link>https://dmtavt.com/post/2018-02-19-tethering-wifi-from-android-dns-problems/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 -0800</pubDate>
      <guid>https://dmtavt.com/post/2018-02-19-tethering-wifi-from-android-dns-problems/</guid>
      <description>&lt;p&gt;Once I tried to connect from Win10 to a hotspot running off Google Pixel 2
(Android 8.1.0)  connected to T-Mobile (tethering) and it worked for a while,
but one day it just broke. Connection would work for 5-10 seconds allowing
to load one website maybe, but then it threw some DNS errors. Setting DNS
server manually didn&amp;rsquo;t help, also &lt;code&gt;ping 8.8.8.8&lt;/code&gt; timed out.&lt;/p&gt;
&lt;p&gt;The solution (&lt;strong&gt;from elevated cmd prompt&lt;/strong&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;netsh int ip reset c:\resetlog.txt
netsh winsock reset catalog
ipconfig /flushdns
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And restart the computer.&lt;/p&gt;
&lt;p&gt;Taken from 
&lt;a href=&#34;https://answers.microsoft.com/en-us/windows/forum/windows8_1-networking/dns-server-isnt-responding-no-wifi-internet/c6bb4b4c-6d8b-4f9d-8ca4-d03e6c414363?auth=1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this question @ answers.microsoft.com&lt;/a&gt;
.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Intellij IDEA live templates</title>
      <link>https://dmtavt.com/post/2017-01-26-intellij-idea-live-templates-slf4j/</link>
      <pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://dmtavt.com/post/2017-01-26-intellij-idea-live-templates-slf4j/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://www.jetbrains.com/idea/features/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Intellij IDEA&lt;/a&gt;
 IDE has a nice feature
of live templates. You type several symbols, press tab (by default) and it
expands the symbols into full expressions. E.g. you can type &lt;code&gt;fori&lt;/code&gt;, press
&lt;kbd&gt;Tab&lt;/kbd&gt; and get a full &lt;em&gt;for&lt;/em&gt; loop created for you, or type &lt;code&gt;iter&lt;/code&gt;, press
&lt;kbd&gt;Tab&lt;/kbd&gt; and if you have &lt;code&gt;iterable&lt;/code&gt;s in scope, you&amp;rsquo;ll be presented with a
choice of available ones to iterate over.&lt;/p&gt;
&lt;h2 id=&#34;example-slf4j-logger-in-each-class&#34;&gt;Example: slf4j logger in each class&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s a super common thing to type at the beginning of each class:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(MyClassName.class);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pretty tedious even with IDE&amp;rsquo;s help.&lt;/p&gt;
&lt;p&gt;Live templates to the rescue, you can define your own one to create the whole
line for you! You&lt;/p&gt;
&lt;h2 id=&#34;how-to-define-a-live-template&#34;&gt;How to define a live template&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;em&gt;File&lt;/em&gt;-&amp;gt;_Settings_-&amp;gt;_Editor_-&amp;gt;_Live Templates_.&lt;/li&gt;
&lt;li&gt;In the right panel tree select category &lt;em&gt;other&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Click the &lt;em&gt;plus&lt;/em&gt; (+) sign on the top right, select &lt;em&gt;Live Template&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Set
&lt;ul&gt;
&lt;li&gt;Abbreviation: &lt;code&gt;log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Description: &lt;code&gt;Inserts private static Logger for slf4j&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Template text: &lt;code&gt;private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger($CLASS_NAME$.class);$END$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now click the &lt;em&gt;Edit Variables&lt;/em&gt; button, we will tell the IDE what
&lt;code&gt;$CLASS_NAME$&lt;/code&gt; means here. &lt;code&gt;$END$&lt;/code&gt; means where to place the cursor after
template expansion.
&lt;ul&gt;
&lt;li&gt;Name: &lt;code&gt;CLASS_NAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expression: &lt;code&gt;className()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Default value: leave empty&lt;/li&gt;
&lt;li&gt;Skip if defined: true (check the checkbox)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;At the very bottom look for text &lt;em&gt;Applicable in&lt;/em&gt; with a link &lt;em&gt;Change&lt;/em&gt; next to
it, click it. Select &lt;em&gt;Java&lt;/em&gt;-&amp;gt;_declaration_.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Congratulations, you&amp;rsquo;re done! Just type &lt;code&gt;log&lt;/code&gt; and press &lt;kbd&gt;Tab&lt;/kbd&gt; anywhere
in the class declaration.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Publishing java libraries to Maven Central, the manual</title>
      <link>https://dmtavt.com/post/2017-01-25-publishing-to-maven-central/</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 -0800</pubDate>
      <guid>https://dmtavt.com/post/2017-01-25-publishing-to-maven-central/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#what-is-sonatype-and-why-is-it-needed&#34;&gt;What is Sonatype and why is it needed?&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#getting-started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#gpg-signing&#34;&gt;GPG signing&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#windows-caveat&#34;&gt;Windows caveat&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#configuring-maven-to-know-where-to-get-the-signing-key&#34;&gt;Configuring Maven to know where to get the signing key&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#configuring-maven-to-know-the-credentials-for-sonatype-servers&#34;&gt;Configuring Maven to know the credentials for Sonatype servers&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#satisfying-requirements-to-pass-all-checks-upon-submission-to-sonatype&#34;&gt;Satisfying requirements to pass all checks upon submission to Sonatype&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#publishing-parent-pom-project-to-central&#34;&gt;Publishing parent POM project to Central&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#publishing-the-project-to-central&#34;&gt;Publishing the project to Central&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h2 id=&#34;what-is-sonatype-and-why-is-it-needed&#34;&gt;What is Sonatype and why is it needed?&lt;/h2&gt;
&lt;p&gt;Sonatypeis a company that  provides a staging repository, which performs
validation and allows to push the builds that pass all checks to the Central
repo. Without it, basically, you can&amp;rsquo;t easily publish anything to the Central
easily, unless you&amp;rsquo;re an Apache project or similar.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Follow their getting started

&lt;a href=&#34;http://central.sonatype.org/pages/ossrh-guide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;guide&lt;/a&gt;
 to set up the needed
credentials. This should be easy - you create a JIRA account and you create a
ticket in JIRA to claim your namespace (groupId in Maven terms). If you have a
github account, for example,
&lt;strong&gt;
&lt;a href=&#34;http://github.com/chhh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://github.com/chhh&lt;/a&gt;
&lt;/strong&gt;, you&amp;rsquo;ll want to claim
&lt;strong&gt;com.github.chhh&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;gpg-signing&#34;&gt;GPG signing&lt;/h2&gt;
&lt;p&gt;You&amp;rsquo;ll need to set up and publish your GPG key for signing artifacts. This is
described

&lt;a href=&#34;http://central.sonatype.org/pages/working-with-pgp-signatures.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;In short you&amp;rsquo;ll need to install gpg or gpg2. I did it on Windows and already had
a working gpg that came with git installation. So I happily used that to
generate my key with (create it with a passphrase!):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gpg --gen-key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Make sure to check&lt;/strong&gt; that the generated key does not have sub keys for
signing. First issue &lt;code&gt;gpg --list-keys&lt;/code&gt;, the output should be like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ gpg --list-keys
/c/Users/&amp;lt;username&amp;gt;/.gnupg/pubring.gpg
---------------------------------
pub   2048R/DA123C12 2012-01-24
uid                  Dmitry Avtonomov (chhh) &amp;lt;email@gmail.com&amp;gt;
sub   2048R/3E123123 2012-01-24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice, that there is one &lt;em&gt;pub&lt;/em&gt; key and one &lt;em&gt;sub&lt;/em&gt; key. You want this &lt;em&gt;sub&lt;/em&gt; key
to not be &lt;em&gt;Usage: C&lt;/em&gt; type.
&lt;code&gt;gpg --edit-key DA123C12&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;gpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

pub  2048R/DA100C23  created: 2012-01-24  expires: never       usage: SC
                     trust: ultimate      validity: ultimate
sub  2048R/3E123123  created: 2012-01-24  expires: never       usage: E
[ultimate] (1). Dmitry Avtonomov (chhh) &amp;lt;email@gmail.com&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this case the &lt;em&gt;sub&lt;/em&gt; key is &lt;em&gt;usage: E&lt;/em&gt;, it&amp;rsquo;s used for encryption only, so
we&amp;rsquo;re good to go, otherwise you&amp;rsquo;d need to delete or revoke it. Published the key
with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gpg --keyserver hkp://pool.sks-keyservers.net --send-keys &amp;lt;key-id&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;windows-caveat&#34;&gt;Windows caveat&lt;/h3&gt;
&lt;p&gt;The previous steps created the keychain file in &lt;code&gt;c:/Users/&amp;lt;username&amp;gt;/.gnupg&lt;/code&gt;.
However, when I later installed the native windows gpg from

&lt;a href=&#34;https://www.gnupg.org/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.gnupg.org/download/&lt;/a&gt;
 I&amp;rsquo;ve found
that it used a different default path and I could not list the key anymore.
Addind a new environment variable &lt;code&gt;GNUPGHOME&lt;/code&gt; and set it to
&lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\.gnupg&lt;/code&gt;. Now the gpg that was installed in windows could
read the old keychain, which meant maven could now use that key to sign files.&lt;/p&gt;
&lt;h2 id=&#34;configuring-maven-to-know-where-to-get-the-signing-key&#34;&gt;Configuring Maven to know where to get the signing key&lt;/h2&gt;
&lt;p&gt;Check out your &lt;code&gt;&amp;lt;maven-install-apth&amp;gt;/conf&lt;/code&gt; directory. There should be a
&lt;code&gt;settings.xml&lt;/code&gt; file. Copy that over to your &lt;code&gt;&amp;lt;user-home&amp;gt;/.m2&lt;/code&gt;, unless you
already have it there. Add the following to &lt;code&gt;&amp;lt;profiles&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;profiles&amp;gt;
    &amp;lt;profile&amp;gt;
      &amp;lt;id&amp;gt;ossrh&amp;lt;/id&amp;gt;
      &amp;lt;activation&amp;gt;
        &amp;lt;activeByDefault&amp;gt;true&amp;lt;/activeByDefault&amp;gt;
      &amp;lt;/activation&amp;gt;
      &amp;lt;properties&amp;gt;
        &amp;lt;gpg.executable&amp;gt;gpg&amp;lt;/gpg.executable&amp;gt;
        &amp;lt;gpg.passphrase&amp;gt;passphrase-you-used-when-created-gpg-key&amp;lt;/gpg.passphrase&amp;gt;
      &amp;lt;/properties&amp;gt;
    &amp;lt;/profile&amp;gt;
&amp;lt;/profiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&amp;rsquo;s ok to have your passphrase set here as this is your user-specific
configuration file. If you don&amp;rsquo;t want to specify that, however, there will be an
option for you to provide that passphrase every time you publish.&lt;/p&gt;
&lt;h2 id=&#34;configuring-maven-to-know-the-credentials-for-sonatype-servers&#34;&gt;Configuring Maven to know the credentials for Sonatype servers&lt;/h2&gt;
&lt;p&gt;You&amp;rsquo;ll provide the log-in credentials in the same &lt;code&gt;settings.xml&lt;/code&gt; maven file in
&lt;code&gt;~/.m2&lt;/code&gt; directory. If you don&amp;rsquo;t want to provide the actual username and
password, log in to your account at

&lt;a href=&#34;https://oss.sonatype.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://oss.sonatype.org&lt;/a&gt;
. In the top right corner
click &lt;code&gt;Log-In&lt;/code&gt;, then click your username and select &lt;code&gt;Profile&lt;/code&gt;. On the new screen
there&amp;rsquo;s a dropdown with two choices: &lt;em&gt;Summary&lt;/em&gt; and &lt;em&gt;User Token&lt;/em&gt;. Select the user
token, it will give you the info. In the &lt;code&gt;settings.xml&lt;/code&gt; file add:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;  &amp;lt;servers&amp;gt;
    &amp;lt;server&amp;gt;
      &amp;lt;id&amp;gt;ossrh&amp;lt;/id&amp;gt;
      &amp;lt;username&amp;gt;user-name-token&amp;lt;/username&amp;gt;
      &amp;lt;password&amp;gt;password-for-token&amp;lt;/password&amp;gt;
    &amp;lt;/server&amp;gt;
  &amp;lt;/servers&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;satisfying-requirements-to-pass-all-checks-upon-submission-to-sonatype&#34;&gt;Satisfying requirements to pass all checks upon submission to Sonatype&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a lot of meta-info required to satisfy all the requirements. As you will
be using the same &lt;code&gt;groupId&lt;/code&gt; for all your artifacts, it&amp;rsquo;s easier to put all the
extra information to a parent POM. You can find an example parent project here:

&lt;a href=&#34;https://github.com/chhh/sonatype-ossrh-parent&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/chhh/sonatype-ossrh-parent&lt;/a&gt;
.
This project consists only of the POM file, specifying the credentials, basic
info and publishing locations. It adds some to the &lt;code&gt;release&lt;/code&gt; target as well.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s ok to just clone that repo and change the information to what you like.
&lt;strong&gt;You will set this POM as the &lt;code&gt;&amp;lt;parent&amp;gt;&lt;/code&gt; of the projects you wish to publish to
Central.&lt;/strong&gt; As it will be the parent POM, anyone who will want to build your
artifacts will need to have that POM, so the first thing is to publish this
project to Central by itself.&lt;/p&gt;
&lt;h2 id=&#34;publishing-parent-pom-project-to-central&#34;&gt;Publishing parent POM project to Central&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;ll be using maven-release plugin. Make sure that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have SCM information configured.&lt;/li&gt;
&lt;li&gt;In this parent POM you set the &lt;code&gt;version&lt;/code&gt; to something like &lt;code&gt;0.1-SNAPSHOT&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The release plugin will use that information to create the build. It will remove
the &lt;code&gt;SNAPSHOT&lt;/code&gt; part, build the project, create a new tag in SCM, push everything
to remote, bump up the version in POM and re-add SNAPSHOT back to it. Now
execute:
&lt;code&gt;mvn release:prepare&lt;/code&gt;
&lt;code&gt;mvn release:perform&lt;/code&gt;
If you encounter any problems with &lt;code&gt;release:perform&lt;/code&gt; you can always do
&lt;code&gt;mvn release:rollback&lt;/code&gt; to undo any changes done by &lt;code&gt;release:prepare&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;publishing-the-project-to-central&#34;&gt;Publishing the project to Central&lt;/h2&gt;
&lt;p&gt;In your actual project set the &lt;code&gt;parent&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;parent&amp;gt;
    &amp;lt;groupId&amp;gt;com.github.chhh&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;sonatype-ossrh-parent&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.1&amp;lt;/version&amp;gt;
    &amp;lt;relativePath&amp;gt;../sonatype-ossrh&amp;lt;/relativePath&amp;gt;
&amp;lt;/parent&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice how we used &lt;code&gt;relativePath&lt;/code&gt; to give maven a hint at where to search for
this POM. The parent project was resiging in a sibling directory next to the
project directory in this case. Otherwise the POM would have to be in the parent
directory of your project.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
